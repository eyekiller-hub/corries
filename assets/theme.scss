/*! purgecss start ignore */
@import '../node_modules/swiper/css/swiper';
/*! purgecss end ignore */

/*============================================================================
  #Functions
==============================================================================*/

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
    str-replace(str-slice($string, $index +
    str-length($search)), $search, $replace);
  }
  @return $string;
}

@function svg-url($svg){
  $encoded:'';
  $slice: 2000;
  $index: 0;
  $loops: ceil(str-length($svg)/$slice);
  @for $i from 1 through $loops {
    $chunk: str-slice($svg, $index, $index + $slice - 1);
    $chunk: str-replace($chunk,'"','\'');
    $chunk: str-replace($chunk,'<','%3C');
    $chunk: str-replace($chunk,'>','%3E');
    $chunk: str-replace($chunk,'&','%26');
    $chunk: str-replace($chunk,'#','%23');
    $encoded: #{$encoded}#{$chunk};
    $index: $index + $slice;
  }
  @return url("data:image/svg+xml;charset=utf8,#{$encoded}");
}

/*============================================================================
  #Variables
==============================================================================*/

$typography-ratio: 1.067; // Minor second
$spacing-ratio: 1.333; // Perfect fourth

:root {
  // Typography

  --typography-base-font-family: 'DIN 2014', sans-serif;
  --typography-base-font-size: 16px;
  --typography-base-line-height: var(--font-size--up-6);
  --typography-base-text-transform: none;
  --typography-base-letter-spacing: normal;

  --typography-uppercase-letter-spacing: 1px;

  --typography-h-font-family: 'Hoefler Text', serif;

  --typography-h1-font-size: var(--font-size--up-12);
  --typography-h1-line-height: var(--font-size--up-15);
  --typography-h1-text-transform: var(--typography-base-text-transform);
  --typography-h1-letter-spacing: var(--typography-base-letter-spacing);

  --typography-h2-font-size: var(--font-size--up-10);
  --typography-h2-line-height: var(--font-size--up-13);
  --typography-h2-text-transform: var(--typography-base-text-transform);
  --typography-h2-letter-spacing: var(--typography-base-letter-spacing);

  --typography-h3-font-size: var(--font-size--up-8);
  --typography-h3-line-height: var(--font-size--up-11);
  --typography-h3-text-transform: var(--typography-base-text-transform);
  --typography-h3-letter-spacing: var(--typography-base-letter-spacing);

  --typography-h4-font-size: var(--font-size--up-6);
  --typography-h4-line-height: var(--font-size--up-9);
  --typography-h4-text-transform: var(--typography-base-text-transform);
  --typography-h4-letter-spacing: var(--typography-base-letter-spacing);

  --typography-h5-font-size: var(--font-size--up-4);
  --typography-h5-line-height: var(--font-size--up-8);
  --typography-h5-text-transform: var(--typography-base-text-transform);
  --typography-h5-letter-spacing: var(--typography-base-letter-spacing);

  --typography-h6-font-size: var(--font-size--up-2);
  --typography-h6-line-height: var(--font-size--up-8);
  --typography-h6-text-transform: var(--typography-base-text-transform);
  --typography-h6-letter-spacing: var(--typography-base-letter-spacing);

  --typography-input-font-size: var(--font-size--0);
  --typography-input-line-height: var(--font-size--up-7);
  --typography-input-text-transform: var(--typography-base-text-transform);
  --typography-input-letter-spacing: var(--typography-base-letter-spacing);

  --typography-buttons-font-size: var(--font-size--down-2);
  --typography-buttons-line-height: var(--font-size--up-7);
  --typography-buttons-text-transform: uppercase;
  --typography-buttons-letter-spacing: var(--typography-uppercase-letter-spacing);

  // Color

  --colors-dark: #000000;
  --colors-light: #FFFFFF;
  --colors-green: #7C8D75;
  --colors-green-active: #63745D;
  --colors-navy: #21343B;
  --colors-beige: #ECE7E4;
  --colors-beige-active: #D8D1CC;
  --colors-slate: #758080;
  --colors-red: #C60012;
  --colors-grey-lightest: #E5E5E5;
  --colors-grey-lighter: #D6D6D6;
  --colors-grey-light: #999999;
  --colors-grey: #666666;
  --colors-grey-dark: #333333;

  --colors-base-text: var(--colors-grey);
  --colors-base-background: var(--colors-light);
  --colors-base-headings: var(--colors-base-text);
  --colors-base-links: inherit;
  --colors-base-links-hover: inherit;

  --colors-placeholder: var(--colors-grey-lightest);

  --colors-button-primary-text: var(--colors-light);
  --colors-button-primary-background: var(--colors-green);
  --colors-button-primary-border: var(--colors-green);
  --colors-button-primary-text-hover: var(--colors-button-primary-text);
  --colors-button-primary-background-hover: var(--colors-green-active);
  --colors-button-primary-border-hover: var(--colors-green-active);
  --colors-button-primary-text-disabled: var(--colors-button-primary-text);
  --colors-button-primary-background-disabled: var(--colors-grey-light);
  --colors-button-primary-border-disabled: var(--colors-grey-light);

  --colors-button-secondary-text: var(--colors-light);
  --colors-button-secondary-background: var(--colors-navy);
  --colors-button-secondary-border: var(--colors-navy);
  --colors-button-secondary-text-hover: var(--colors-button-primary-text);
  --colors-button-secondary-background-hover: var(--colors-dark);
  --colors-button-secondary-border-hover: var(--colors-dark);
  --colors-button-secondary-text-disabled: var(--colors-button-primary-text);
  --colors-button-secondary-background-disabled: var(--colors-grey-light);
  --colors-button-secondary-border-disabled: var(--colors-grey-light);

  --colors-text-input-text: var(--colors-base-text);
  --colors-text-input-background: var(--colors-base-background);
  --colors-text-input-border: var(--colors-grey-lighter);
  --colors-text-input-border-active: var(--colors-green);
  --colors-text-input-placeholder: var(--colors-text-input-text);

  --colors-checkbox-input-text: var(--colors-base-text);
  --colors-checkbox-input-background: var(--colors-base-background);
  --colors-checkbox-input-border: var(--colors-grey-lighter);
  --colors-checkbox-input-text-active: var(--colors-checkbox-input-text);
  --colors-checkbox-input-background-active: var(--colors-checkbox-input-background);
  --colors-checkbox-input-border-active: var(--colors-checkbox-input-border);

  // Container

  --container-padding-x: var(--spacing--up-1);
  --container-default-width: 1410px;
  --container-narrow-width: 1000px;

  // Page spacing

  --page-spacing-top: var(--spacing--up-1);
  --page-spacing-bottom: var(--spacing--up-3);
  --page-spacing-bottom--large: var(--spacing--up-6);

  // Homepage section

  --homepage-section-spacing: var(--spacing--up-2);

  // Input

  --input-padding-y: var(--spacing--down-2);
  --input-padding-x: var(--spacing--0);
  --input-border: 1px solid;
  --input-border-radius: var(--border-radius-default);

  // Checkbox

  --checkbox-border: 1px solid;
  --checkbox-border-radius: var(--border-radius-default);

  // Button

  --button-padding-x: var(--spacing--up-2);
  --button-font-weight: 700;
  --button-border: 1px solid;
  --button-border-radius: 0;

  // Select

  --select-border-radius: var(--border-radius-default);
  --select-background-image: #{svg-url('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 15 9" fill="#666"><path d="M0 1.414L1.414 0l6 6 6-6 1.414 1.414-7.414 7.414z"/></svg>')};
  --select-background-size: var(--font-size--down-6);
  --select-background-position: center right var(--input-padding-x);
  --select-padding-right: calc(calc(var(--input-padding-y) * 2) + 40px);

  // Transition

  --transition-easing: .2s;

  // Border radius

  --border-radius-default: 4px;
  --border-radius-full: 9999px;

  // Utility bar

  --utility-bar-height: 36.5px;

  // Header

  --header-height: 75px;

  // Modular scale

  --font-size--0: var(--typography-base-font-size);
  --font-size--up-1: calc(var(--font-size--0) * #{$typography-ratio});
  --font-size--down-1: calc(var(--font-size--0) / #{$typography-ratio});

  --spacing--0: var(--typography-base-font-size);
  --spacing--up-1: calc(var(--spacing--0) * #{$spacing-ratio});
  --spacing--down-1: calc(var(--spacing--0) / #{$spacing-ratio});

  --spacing-negative--0: calc(-1 * var(--typography-base-font-size));
  --spacing-negative--up-1: calc(var(--spacing-negative--0) * #{$spacing-ratio});
  --spacing-negative--down-1: calc(var(--spacing-negative--0) / #{$spacing-ratio});

  @for $num from 2 through 25 {
    --font-size--up-#{$num}: calc(var(--font-size--up-#{$num - 1}) * #{$typography-ratio});
    --font-size--down-#{$num}: calc(var(--font-size--down-#{$num - 1}) / #{$typography-ratio});

    --spacing--up-#{$num}: calc(var(--spacing--up-#{$num - 1}) * #{$spacing-ratio});
    --spacing--down-#{$num}: calc(var(--spacing--down-#{$num - 1}) / #{$spacing-ratio});

    --spacing-negative--up-#{$num}: calc(var(--spacing-negative--up-#{$num - 1}) * #{$spacing-ratio});
    --spacing-negative--down-#{$num}: calc(var(--spacing-negative--down-#{$num - 1}) / #{$spacing-ratio});
  }
}

// Breakpoint (for loops)

$xsmall: 480px;
$small: 767px;
$medium: 768px;
$large: 1160px;

$breakpoints: (
  'xsmall' '(max-width: #{$xsmall})',
  'small' '(max-width: #{$small})',
  'medium' '(min-width: #{$small + 1px})',
  'medium-down' '(max-width: #{$medium})',
  'large' '(min-width: #{$medium + 1px})',
  'large-down' '(max-width: #{$large})',
  'xlarge' '(min-width: #{$large + 1px})'
);

// Color (for loops)

$colors: (
  dark,
  light,
  green,
  green-active,
  navy,
  beige,
  beige-active,
  slate,
  red,
  grey-lightest,
  grey-lighter,
  grey-light,
  grey,
  grey-dark,

  base-text,
  base-background,
  base-headings,
  base-links,
  base-links-hover,

  placeholder,

  button-primary-text,
  button-primary-background,
  button-primary-border,
  button-primary-text-hover,
  button-primary-background-hover,
  button-primary-border-hover,
  button-primary-text-disabled,
  button-primary-background-disabled,
  button-primary-border-disabled,

  button-secondary-text,
  button-secondary-background,
  button-secondary-border,
  button-secondary-text-hover,
  button-secondary-background-hover,
  button-secondary-border-hover,
  button-secondary-text-disabled,
  button-secondary-background-disabled,
  button-secondary-border-disabled,

  text-input-placeholder,
  text-input-text,
  text-input-background,
  text-input-border,

  checkbox-input-text,
  checkbox-input-background,
  checkbox-input-border,
  checkbox-input-text-active,
  checkbox-input-background-active,
  checkbox-input-border-active
);

// Font stack (for loops)

$font-stacks: (base, h);

// Container (for loops)

$containers: (default, narrow);

// Border radius (for loops)

$border-radiuses: (default, full);

// Button (for loops)

$buttons: (primary, secondary);

/*============================================================================
  #Mixins
==============================================================================*/

@mixin media-query($media-query) {
  @each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 1);
    $expression: nth($breakpoint, 2);

    @if $media-query == $name and $expression {
      @media only screen and #{$expression} {
        @content;
      }
    }
  }
}

@mixin placeholder {
  &::-webkit-input-placeholder {@content}
  &:-moz-placeholder           {@content}
  &::-moz-placeholder          {@content}
  &:-ms-input-placeholder      {@content}
}

@mixin clearfix() {
  &:after {
    content: " ";
    display: block;
    clear: both;
  }
}

@mixin input-reset() {
  display: inline;
  text-align: inherit;
  background: none;
  border: 0;
  border-radius: 0;
  outline: 0;
  color: inherit;
  font: inherit;
  letter-spacing: inherit;
  text-decoration: inherit;
  text-transform: inherit;
  line-height: inherit;
  overflow: visible;
  padding: 0;
  margin: 0;
  -webkit-appearance: none;

  &::-moz-focus-inner {
    border: 0;
    padding: 0;
  }

  &::-webkit-inner-spin-button,
  &::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  &::-ms-clear {
    display: none;
  }

  &::-webkit-search-decoration,
  &::-webkit-search-cancel-button,
  &::-webkit-search-results-button,
  &::-webkit-search-results-decoration {
    display: none;
  }
}

@mixin input() {
  @include input-reset;
  display: inline-block;
  vertical-align: middle;
  padding: var(--input-padding-y) var(--input-padding-x);
  border: var(--input-border);
  border-radius: var(--input-border-radius);
  color: var(--colors-text-input-text);
  background-color: var(--colors-text-input-background);
  border-color: var(--colors-text-input-border);
  font-size: var(--font-size--0);
  line-height: var(--font-size--up-7);
  text-transform: var(--typography-base-text-transform);
  letter-spacing: var(--typography-base-letter-spacing);

  &:focus {
    border-color: var(--colors-text-input-border-active);
  }

  @include placeholder {
    color: var(--colors-text-input-placeholder);
  }
}

@mixin input-border() {
  border: var(--input-border);
  border-color: var(--colors-text-input-border);

  &:focus {
    border-color: var(--colors-text-input-border-active);
  }
}

/*============================================================================
  #Reset
==============================================================================*/

@mixin reset() {
  /*! purgecss start ignore */
  //
  // Layout
  //

  *, :before, :after {
    box-sizing: border-box;
  }

  body, h1, h2, h3, h4, h5, h6, p, blockquote, figure, ol, ul {
    margin: 0;
    padding: 0;
  }

  img {
    height: auto;
    border: 0;
  }

  li {
    display: block;
  }

  //
  // Type
  //

  html {
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    // Optimize legibility on headers only to
    // prevent performance issues from applying
    // it to large portions of text.
    text-rendering: optimizeLegibility;
    font-weight: normal;
  }

  a {
    background-color: transparent;
    text-decoration: none;
    color: inherit;

    &:active,
    &:hover {
      outline: 0;
    }
  }

  strong {
    font-weight: bold;
  }
  em {
    font-style: italic;
  }

  sup {
    position: relative;
    top: var(--spacing-negative--down-6);
    vertical-align: top;
    font-size: var(--font-size--down-2);
  }

  //
  // Forms
  //

  input,
  textarea,
  select {
    display: block;
    width: 100%;

    &[disabled] {
      cursor: default;
    }
  }

  label {
    display: inline-block;
  }

  label > * {
    pointer-events: none;
  }

  input::-moz-focus-inner {
    border: 0;
    padding: 0;
  }

  input[type=radio] {
    -webkit-appearance: radio;
  }

  input[type=checkbox] {
    -webkit-appearance: checkbox;
  }

  input[type="checkbox"], input[type="radio"] {
    display: inline;
    margin-bottom: 0;

    // prevent padding set on the input element
    // from applying to radio buttons or checkboxes
    // on iOS Safari
    padding: 0 !important;
  }

  input[type="search"] {
    -webkit-appearance: textfield;

    &::-webkit-search-decoration {
      -webkit-appearance: none;
    }
  }

  input[type="submit"], button {
    cursor: pointer;
  }

  input[type="image"] {
    border: none;
  }
  /*! purgecss end ignore */
}

@include reset();

/*============================================================================
  #Base
==============================================================================*/

@mixin base() {
  /*! purgecss start ignore */
  html, body {
    background-color: var(--colors-base-background);
  }

  svg {
    display: block;
    width: 1em;
    height: 1em;
    fill: currentColor;
  }
  /*! purgecss end ignore */
}

@include base();

/*============================================================================
  #Animation
==============================================================================*/

@mixin animation() {
  /*! purgecss start ignore */
  @keyframes fade-in {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  @keyframes fade-out {
    0% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }

  .fade-in {
    animation: fade-in var(--transition-easing) both;
  }
  .fade-out {
    animation: fade-in var(--transition-easing) both;
  }
  .fade-in-on-active {
    transition: opacity var(--transition-easing);
    opacity: 0;
    pointer-events: none;

    &.is-active {
      opacity: 1;
      pointer-events: auto;
    }
  }

  .transition {
    transition: var(--transition-easing);
  }
  /*! purgecss end ignore */
}

@include animation();

/*============================================================================
  #Layout
==============================================================================*/

@mixin layout() {
  .clearfix {
    &:after {
      content: " ";
      display: block;
      clear: both;
    }
  }

  .box-center {
    margin-right: auto;
    margin-left: auto;
  }

  .invisible {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
  }

  .overflow-hidden {
    overflow: hidden;
  }
  @include media-query(large) {
    .large--overflow-hidden {
      overflow: hidden;
    }
  }

  .nowrap {
    white-space: nowrap;
  }

  .large--nowrap {
    @include media-query(large) {
      white-space: nowrap;
    }
  }

  .scroll-horizontal {
    overflow-y: hidden;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }

  .scroll-vertical {
    overflow-y: auto;
    overflow-x: hidden;
    -webkit-overflow-scrolling: touch;
  }

  .image-container {
    display: block;
    font-size: 0;
    line-height: 1;

    img {
      width: 100%;
    }
  }
  .image-placeholder {
    display: block;
    font-size: 0;
    line-height: 1;
    background: var(--colors-placeholder);
  }

  .video-container {
    position: relative;

    iframe {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }

  @each $value in baseline, middle, top, bottom {
    .align-#{$value} {
      vertical-align: $value;
    }
  }

  .height-full {
    height: 100%;
  }
  .height-full\! {
    height: 100% !important;
  }
  .height-full-vh {
    height: 100%;
  }
  .height-full-vh\! {
    height: 100vh !important;
  }
  .height--auto {
    height: auto;
  }
  .height--auto\! {
    height: auto !important;
  }
  @include media-query(medium-down) {
    .medium-down--height-full {
      height: 100%;
    }
    .medium-down--height-full\! {
      height: 100% !important;
    }
    .medium-down--height-full-vh {
      height: 100vh;
    }
    .medium-down--height-full-vh\! {
      height: 100vh !important;
    }
    .medium-down--height--auto {
      height: auto;
    }
    .medium-down--height--auto\! {
      height: auto !important;
    }
  }
  @include media-query(large) {
    .large--height-full {
      height: 100%;
    }
    .large--height-full\! {
      height: 100% !important;
    }
    .large--height-full-vh {
      height: 100vh;
    }
    .large--height-full-vh\! {
      height: 100vh !important;
    }
    .large--height--auto {
      height: auto;
    }
    .large--height--auto\! {
      height: auto !important;
    }
  }

  .background-full {
    background-size: cover;
    background-position: center center;
  }
  .background-full-top {
    background-size: cover;
    background-position: top center;
  }
  .object-full {
    object-fit: cover;
    object-position: center center;
  }
  .object-full-top {
    object-fit: cover;
    object-position: top center;
  }

  .no-pointer {
    pointer-events: none;
  }
  .auto-pointer {
    pointer-events: auto;
  }
  @include media-query(large) {
    .large--no-pointer {
      pointer-events: none;
    }
  }

  .visually-hidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
    white-space: nowrap;
  }

  .hidden-opacity {
    opacity: 0;
  }
}

@include layout();

/*============================================================================
  #Typography
==============================================================================*/

@mixin typography() {
  /*! purgecss start ignore */
  html {
    font-size: var(--typography-base-font-size);
    line-height: var(--typography-base-line-height);
    text-transform: var(--typography-base-text-transform);
    letter-spacing: var(--typography-base-letter-spacing);
  }

  body, input, textarea, select, button {
    font-family: var(--typography-base-font-family);
    font-size: var(--typography-base-font-size);
    line-height: var(--typography-base-line-height);
    color: var(--colors-base-text);
  }

  h1, h2, h3, h4, h5, h6, p, ul, ol, blockquote, hr, input, textarea, select, button {
    margin-bottom: var(--typography-base-font-size);
  }

  h1, h2, h3, h4, h5, h6 {
    font-family: var(--typography-h-font-family);
    color: var(--colors-base-headings);
  }

  h1 {
    font-size: var(--typography-h1-font-size);
    line-height: var(--typography-h1-line-height);
    text-transform: var(--typography-h1-text-transform);
    letter-spacing: var(--typography-h1-letter-spacing);
  }

  h2 {
    font-size: var(--typography-h2-font-size);
    line-height: var(--typography-h2-line-height);
    text-transform: var(--typography-h2-text-transform);
    letter-spacing: var(--typography-h2-letter-spacing);
  }

  h3 {
    font-size: var(--typography-h3-font-size);
    line-height: var(--typography-h3-line-height);
    text-transform: var(--typography-h3-text-transform);
    letter-spacing: var(--typography-h3-letter-spacing);
  }

  h4 {
    font-size: var(--typography-h4-font-size);
    line-height: var(--typography-h4-line-height);
    text-transform: var(--typography-h4-text-transform);
    letter-spacing: var(--typography-h4-letter-spacing);
  }

  h5 {
    font-size: var(--typography-h5-font-size);
    line-height: var(--typography-h5-line-height);
    text-transform: var(--typography-h5-text-transform);
    letter-spacing: var(--typography-h5-letter-spacing);
  }

  h6 {
    font-size: var(--typography-h6-font-size);
    line-height: var(--typography-h6-line-height);
    text-transform: var(--typography-h6-text-transform);
    letter-spacing: var(--typography-h6-letter-spacing);
  }

  p, ul, ol, blockquote, label {
    font-size: var(--typography-base-font-size);
    line-height: var(--typography-base-line-height);
  }

  a {
    transition: var(--transition-easing);
    color: var(--colors-base-links);

    &:hover {
      color: var(--colors-base-links-hover);
    }
  }

  hr {
    margin-top: 0;
  }

  small {
    font-size: var(--font-size--down-1);
  }

  .cursor-pointer {
    cursor: pointer;
  }
  .cursor-default {
    cursor: default;
  }

  .text-hidden {
    visibility: hidden;
  }
  .text-justify {
    text-align: justify;
  }
  .text-caps {
    text-transform: uppercase;
  }
  .text-caps-letter-spacing {
    text-transform: uppercase;
    letter-spacing: var(--typography-uppercase-letter-spacing);
  }
  .text-regular-case {
    text-transform: none;
  }
  .text-regular-case\! {
    text-transform: none !important;
  }
  .text-underline,
  .links-text-underline a {
    text-decoration: underline;
  }
  .text-line-through {
    text-decoration: line-through;
  }

  .font-italic {
    font-style: italic;
  }
  /*! purgecss end ignore */
}

@include typography();


/*============================================================================
  #Forms
==============================================================================*/

@mixin forms() {
  .input-reset {
    @include input-reset;
  }

  .input {
    @include input;
  }

  .input-border {
    @include input-border();
  }

  .select-wrap {
    position: relative;
    border-radius: var(--select-border-radius);
    overflow: hidden;

    &:after {
      content: "";
      display: block;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      background-image: var(--select-background-image);
      background-repeat: no-repeat;
      background-size: var(--select-background-size);
      background-position: var(--select-background-position);
      pointer-events: none;
    }
  }

  .select {
    @include input;
    padding-right: var(--select-padding-right);
  }

  .checkbox-wrap {
    position: relative;
    overflow: hidden;
    display: block;

    &, * {
      cursor: pointer;
    }
  }

  .checkbox {
    @include input-reset;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
  }

  .checkbox-icon {
    pointer-events: none;
    display: block;
    width: 1em;
    height: 1em;
    position: relative;
    color: var(--colors-checkbox-input-text);
    background-color: var(--colors-checkbox-input-background);
    border: var(--checkbox-border);
    border-color: var(--colors-checkbox-input-border);

    .checkbox:checked + &,
    .checkbox.is-checked + & {
      color: var(--colors-checkbox-input-text-active);
      background-color: var(--colors-checkbox-input-background-active);
      border-color: var(--colors-checkbox-input-border-active);
    }

    > * {
      display: none;
      width: 70%;
      height: 70%;
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      margin: auto;

      .checkbox:checked + &,
      .checkbox.is-checked + & {
        display: block;
      }
    }
  }

  @each $button in $buttons {
    .button-#{$button} {
      @include input;
      transition: var(--transition-easing);
      padding-left: var(--button-padding-x);
      padding-right: var(--button-padding-x);
      font-weight: var(--button-font-weight);
      text-align: center;
      border-radius: var(--button-border-radius);
      border: var(--button-border);
      color: var(--colors-button-#{$button}-text);
      background-color: var(--colors-button-#{$button}-background);
      border-color: var(--colors-button-#{$button}-border);
      font-size: var(--typography-buttons-font-size);
      line-height: var(--typography-buttons-line-height);
      text-transform: var(--typography-buttons-text-transform);
      letter-spacing: var(--typography-buttons-letter-spacing);

      &:hover {
        color: var(--colors-button-#{$button}-text-hover);
        background-color: var(--colors-button-#{$button}-background-hover);
        border-color: var(--colors-button-#{$button}-border-hover);
      }

      &[disabled],
      &.is-disabled {
        color: var(--colors-button-#{$button}-text-disabled);
        background-color: var(--colors-button-#{$button}-background-disabled);
        border-color: var(--colors-button-#{$button}-border-disabled);
      }
    }
  }
}

@include forms();

/*============================================================================
  #RTE
==============================================================================*/

@mixin rte() {
  /*! purgecss start ignore */
  .rte {
    p:empty,
    ul:empty,
    li:empty {
      display: none;
    }

    > :last-child {
      margin-bottom: 0;
    }

    a {
      text-decoration: underline;
    }

    p,
    blockquote,
    ul, ol,
    hr,
    table,
    .video-container,
    .rte-margin-bottom {
      font: inherit;
    }

    p,
    blockquote,
    h1, h2, h3, h4, h5, h6,
    ul, ol,
    hr,
    table,
    .video-container,
    .rte-margin-bottom {
      margin-bottom: var(--spacing--up-1);
    }

    ul, ol {
      padding-left: var(--font-size--up-1);
    }

    img {
      max-width: 100%;
    }

    abbr[title] {
      border-bottom: 1px dotted;
    }

    input[type="checkbox"] {
      width: auto;
      margin: 0;
    }
  }

  .rte--page {
    font-size: var(--typography-base-font-size);
    line-height: var(--typography-base-line-height);

    p,
    blockquote,
    h1, h2, h3, h4, h5, h6,
    ul, ol,
    hr,
    table,
    .video-container,
    .rte-margin-bottom {
      margin-bottom: var(--spacing--up-3);
    }

    ul,
    ol {
      padding: 0;
    }

    li {
      display: list-item;
      list-style-position: inside;
    }
  }

  .rte--form-errors {
    font-size: var(--font-size--down-2);
    line-height: var(--font-size--up-4);

    ul {
      margin: 0;
      padding: 0;
      padding-bottom: var(--spacing--down-1);
      color: var(--colors-red);
      list-style: inside;
    }

    li {
      display: list-item;
    }
  }

  .rte--footer-column-copy {
    [style*="underline"] {
      display: block;
      text-decoration: none !important;
      color: var(--colors-navy);
      font-size: var(--font-size--up-6);
      line-height: 1;
      margin-bottom: var(--spacing--down-3);
    }

    a {
      color: var(--colors-green);
      text-decoration: underline;

      &:hover {
        color: var(--colors-green-active);
      }
    }
  }

  .rte--product-short-description {
    p {
      @include media-query(small) {
        font-size: var(--typography-base-font-size);
        line-height: var(--typography-base-line-height);
      }
    }

    ul,
    ol {
      padding: 0;
    }

    li {
      display: flex;
      align-items: center;

      + li {
        margin-top: var(--spacing--down-4);
      }

      &:before {
        content: '';
        width: 24px;
        height: 24px;
        background-image: svg-url('<svg width="24" height="24" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="evenodd"><circle fill="#ECE7E4" cx="12" cy="12" r="12"/><path d="M16.525 8.185a.63.63 0 01.89.89l-7.127 7.128a.63.63 0 01-.89 0l.051.046a.628.628 0 01-.192-.131l-2.672-2.673a.63.63 0 01.89-.891l2.34 2.339z" fill="#333" fill-rule="nonzero"/></g></svg>');
        background-size: cover;
        margin-right: var(--spacing--0);
      }
    }
  }

  .rte--product-tabs {
    table {
      border-collapse: collapse;
      border-spacing: 0;

      @include media-query(large) {
        font-size: var(--font-size--up-2);
        line-height: var(--font-size--up-8);
      }
    }

    td {
      padding: var(--spacing--down-2) var(--spacing--0);
      border-bottom: 1px solid var(--colors-beige);

      &:first-child {
        width: auto !important;
        background-color: var(--colors-beige-active);
        font-weight: 500;
      }

      &:last-child {
        width: 100% !important;
        background-color: var(--colors-light);
      }

      @include media-query(large) {
        padding: var(--spacing--down-1) var(--spacing--up-1);
      }
    }
  }
  /*! purgecss end ignore */
}

@include rte();

/*============================================================================
  #Grid
==============================================================================*/

@mixin grid() {
  @include clearfix;
  list-style: none;
  font-size: 0;

  > .grid-item {
    display: inline-block;
    vertical-align: top;
    white-space: normal;
    font-size: var(--typography-base-font-size);
    line-height: var(--typography-base-line-height);
  }
}

@mixin grid-bar() {
  @include clearfix;
  list-style: none;
  font-size: 0;

  > .grid-item {
    display: inline-block;
    vertical-align: middle;
    white-space: normal;
    font-size: var(--typography-base-font-size);
    line-height: var(--typography-base-line-height);
  }
}

@mixin grid-uniform() {
  @include clearfix;
  list-style: none;
  font-size: 0;

  > .grid-item {
    display: inline-block;
    vertical-align: top;
    white-space: normal;
    font-size: var(--typography-base-font-size);
    line-height: var(--typography-base-line-height);
  }
}

@mixin grid-gutter($num) {
  $margin-left: var(--spacing-negative--0);
  $padding-left: var(--spacing--0);

  @if $num > 0 {
    $margin-left: var(--spacing-negative--up-#{$num});
    $padding-left: var(--spacing--up-#{$num});
  }

  @if $num < 0 {
    $margin-left: var(--spacing-negative--down#{$num});
    $padding-left: var(--spacing--down#{$num});
  }

  margin-left: $margin-left;

  > .grid-item {
    padding-left: $padding-left;
  }
}

@mixin grid-helpers($breakpoint: "") {

  .grid-item img {
    max-width: 100%;
  }

  .#{$breakpoint}grid {
    @include grid();
  }

  .#{$breakpoint}grid-reverse {
    direction: rtl;
    text-align: left;

    > .grid-item {
      direction: ltr;
      text-align: left;
    }
  }

  .#{$breakpoint}grid-bar {
    @include grid-bar();
  }

  .#{$breakpoint}grid-bar-reverse {
    direction: rtl;

    > .grid-item {
      direction: ltr;
    }
  }

  .#{$breakpoint}grid-uniform {
    @include grid-uniform();
  }

  .#{$breakpoint}grid--0 {
    @include grid();
    @include grid-gutter(0);
  }
  .#{$breakpoint}grid-bar--0 {
    @include grid-bar();
    @include grid-gutter(0);
  }
  .#{$breakpoint}grid-uniform--0 {
    @include grid-uniform();
    @include grid-gutter(0);
  }

  @for $n from 1 through 8 {
    .#{$breakpoint}grid--up-#{$n} {
      @include grid();
      @include grid-gutter($n);
    }
    .#{$breakpoint}grid-bar--up-#{$n} {
      @include grid-bar();
      @include grid-gutter($n);
    }
    .#{$breakpoint}grid-uniform--up-#{$n} {
      @include grid-uniform();
      @include grid-gutter($n);
    }

    .#{$breakpoint}grid--down-#{$n} {
      @include grid();
      @include grid-gutter(-$n);
    }
    .#{$breakpoint}grid-bar--down-#{$n} {
      @include grid-bar();
      @include grid-gutter(-$n);
    }
    .#{$breakpoint}grid-uniform--down-#{$n} {
      @include grid-uniform();
      @include grid-gutter(-$n);
    }
  }
}

@mixin grid-column-helpers($breakpoint: "") {
  $columns: (1,one) (2,two) (3,three) (4,four) (5,five) (6,six) (7,seven) (8,eight) (9,nine) (10,ten) (11,eleven) (12,twelve) (13,thirteen) (14,fourteen) (15,fifteen) (16,sixteen);

  .one-max {
    max-width: 100%;
  }

  .#{$breakpoint}auto {
    width: auto;
  }

  .#{$breakpoint}one,
  .#{$breakpoint}child-one > * {
    width: 100%;
  }

  @each $column in $columns {
    $column-count: nth($column, 1);
    $column-class: nth($column, 2);

    @each $num in $columns {
      $num-value: nth($num, 1);
      $num-class: nth($num, 2);

      @if $column-count > $num-value {
        .#{$breakpoint}#{$num-class}-#{$column-class} {
          width: 100/$column-count * $num-value * 1%;
        }
      }
    }
  }
}

@include grid-helpers();
@include grid-column-helpers();

/*============================================================================
  #Display helpers
==============================================================================*/

@mixin display-helpers($breakpoint: "") {
  .#{$breakpoint}block {
    display: block;
  }
  .#{$breakpoint}block\! {
    display: block !important;
  }
  .#{$breakpoint}inline {
    display: inline;
  }
  .#{$breakpoint}inline-block {
    display: inline-block;
  }
  .#{$breakpoint}inline-block-middle {
    display: inline-block;
    vertical-align: middle;
  }

  .#{$breakpoint}table {
    display: table;
  }
  .#{$breakpoint}table-row {
    display: table-row;
  }
  .#{$breakpoint}table-cell {
    display: table-cell;
  }
}

@include display-helpers();

@each $breakpoint in $breakpoints {
  $keyword: nth($breakpoint, 1);
  $media-query: nth($breakpoint, 2);

  @media only screen and #{$media-query} {
    @include display-helpers("#{$keyword}--");
  }
}

/*============================================================================
  #Flexbox
==============================================================================*/

@mixin flexbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
}

@mixin flex($grow: 1, $shrink: null, $basis: null) {
  $fg-boxflex: $grow;

  @if type-of($grow) == 'list' {
    $fg-boxflex: nth($grow, 1);
  }

  -webkit-box-flex: $fg-boxflex;
  -webkit-flex: $grow $shrink $basis;
  -moz-box-flex: $fg-boxflex;
  -moz-flex: $grow $shrink $basis;
  -ms-flex: $grow $shrink $basis;
  flex: $grow $shrink $basis;
}

@mixin inline-flex {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -moz-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

@mixin inline-flex-important {
  display: -webkit-inline-box !important;
  display: -webkit-inline-flex !important;
  display: -moz-inline-flex !important;
  display: -ms-inline-flexbox !important;
  display: inline-flex !important;
}

@mixin flex-direction($value: row) {
  @if $value == row-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: horizontal;
  } @else if $value == column {
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
  } @else if $value == column-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: vertical;
  } @else {
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;
  }
  -webkit-flex-direction: $value;
  -moz-flex-direction: $value;
  -ms-flex-direction: $value;
  flex-direction: $value;
}

@mixin flex-wrap($value: nowrap) {
  -webkit-flex-wrap: $value;
  -moz-flex-wrap: $value;
  @if $value == nowrap {
    -ms-flex-wrap: none;
  } @else {
    -ms-flex-wrap: $value;
  }
  flex-wrap: $value;
}

@mixin flex-flow($values: (row nowrap)) {
  -webkit-flex-flow: $values;
  -moz-flex-flow: $values;
  -ms-flex-flow: $values;
  flex-flow: $values;
}

@mixin order($int: 0) {
  -webkit-box-ordinal-group: $int + 1;
  -webkit-order: $int;
  -moz-order: $int;
  -ms-flex-order: $int;
  order: $int;
}

@mixin flex-grow($int: 0) {
  -webkit-box-flex: $int;
  -webkit-flex-grow: $int;
  -moz-flex-grow: $int;
  -ms-flex-positive: $int;
  flex-grow: $int;
}

@mixin flex-shrink($int: 1) {
  -webkit-flex-shrink: $int;
  -moz-flex-shrink: $int;
  -ms-flex-negative: $int;
  flex-shrink: $int;
}

@mixin flex-basis($value: auto) {
  -webkit-flex-basis: $value;
  -moz-flex-basis: $value;
  -ms-flex-preferred-size: $value;
  flex-basis: $value;
}

@mixin justify-content($value: flex-start) {
  @if $value == flex-start {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
  } @else if $value == flex-end {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
  } @else if $value == space-between {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
  } @else if $value == space-around {
    -ms-flex-pack: distribute;
  } @else {
    -webkit-box-pack: $value;
    -ms-flex-pack: $value;
  }
  -webkit-justify-content: $value;
  -moz-justify-content: $value;
  justify-content: $value;
}

@mixin align-items($value: stretch) {
  @if $value == flex-start {
    -webkit-box-align: start;
    -ms-flex-align: start;
  } @else if $value == flex-end {
    -webkit-box-align: end;
    -ms-flex-align: end;
  } @else {
    -webkit-box-align: $value;
    -ms-flex-align: $value;
  }
  -webkit-align-items: $value;
  -moz-align-items: $value;
  align-items: $value;
}

@mixin align-self($value: auto) {
  -webkit-align-self: $value;
  -moz-align-self: $value;
  @if $value == flex-start {
    -ms-flex-item-align: start;
  } @else if $value == flex-end {
    -ms-flex-item-align: end;
  } @else {
    -ms-flex-item-align: $value;
  }
  align-self: $value;
}

@mixin align-content($value: stretch) {
  -webkit-align-content: $value;
  -moz-align-content: $value;
  @if $value == flex-start {
    -ms-flex-line-pack: start;
  } @else if $value == flex-end {
    -ms-flex-line-pack: end;
  } @else {
    -ms-flex-line-pack: $value;
  }
  align-content: $value;
}

@mixin flex-gutter($num) {
  $margin-left: var(--spacing-negative--0);
  $padding-left: var(--spacing--0);

  @if $num > 0 {
    $margin-left: var(--spacing-negative--up-#{$num});
    $padding-left: var(--spacing--up-#{$num});
  }

  @if $num < 0 {
    $margin-left: var(--spacing-negative--down#{$num});
    $padding-left: var(--spacing--down#{$num});
  }

  margin-left: $margin-left;

  > [class*=flex-item] {
    padding-left: $padding-left;
  }
}

@mixin flexbox-helpers($breakpoint: "") {
  .#{$breakpoint}flex-item {
    @include flex(1);
  }
  .#{$breakpoint}flex-item-shrink {
    @include flex-shrink(1);
    flex-basis: auto;
    flex-grow: 0;
  }
  .#{$breakpoint}flex-item-center {
    @include align-self(center);
  }
  .#{$breakpoint}flex-item-end {
    @include align-self(flex-end);
  }

  @for $num from 2 through 12 {
    .#{$breakpoint}flex-item--#{$num} {
      @include flex($num);
    }
  }

  @for $num from 1 through 3 {
    .#{$breakpoint}flex-order--#{$num} {
      @include order($num);
    }
  }

  .#{$breakpoint}flex {
    @include flexbox;
  }
  .#{$breakpoint}flex-wrap {
    @include flex-wrap(wrap);
  }
  .#{$breakpoint}flex-inline {
    @include inline-flex;
  }
  .#{$breakpoint}flex-inline\! {
    @include inline-flex-important;
  }
  .#{$breakpoint}flex-reverse {
    @include flexbox;
    @include flex-direction(row-reverse);
  }
  .#{$breakpoint}flex-vertical {
    @include flexbox;
    @include flex-direction(column);
  }
  .#{$breakpoint}flex-vertical-reverse {
    @include flexbox;
    @include flex-direction(column-reverse);
  }
  .#{$breakpoint}flex-bar {
    @include flexbox;
    @include align-items(center);
  }
  .#{$breakpoint}flex-center {
    @include flexbox;
    @include justify-content(center);
  }
  .#{$breakpoint}flex-space-between {
    @include justify-content(space-between);
  }

  .#{$breakpoint}flex--0 {
    @include flexbox;
    @include flex-gutter(0);
  }
  .#{$breakpoint}flex-bar--0 {
    @include flexbox;
    @include align-items(center);
    @include flex-gutter(0);
  }
  .#{$breakpoint}flex-center--0 {
    @include flexbox;
    @include justify-content(center);
    @include flex-gutter(0);
  }

  @for $num from 1 through 8 {
    .#{$breakpoint}flex--up-#{$num} {
      @include flexbox;
      @include flex-gutter($num);
    }
    .#{$breakpoint}flex--down-#{$num} {
      @include flexbox;
      @include flex-gutter(-$num);
    }
    .#{$breakpoint}flex-bar--up-#{$num} {
      @include flexbox;
      @include align-items(center);
      @include flex-gutter($num);
    }
    .#{$breakpoint}flex-bar--down-#{$num} {
      @include flexbox;
      @include align-items(center);
      @include flex-gutter(-$num);
    }
    .#{$breakpoint}flex-center--up-#{$num} {
      @include flexbox;
      @include justify-content(center);
      @include flex-gutter($num);
    }
    .#{$breakpoint}flex-center--down-#{$num} {
      @include flexbox;
      @include justify-content(center);
      @include flex-gutter(-$num);
    }
  }
}

@include flexbox-helpers();

/*============================================================================
  #Containers
==============================================================================*/

@mixin containers($breakpoint: "") {
  .#{$breakpoint}container-padding {
    padding-left: var(--container-padding-x);
    padding-right: var(--container-padding-x);
  }

  .#{$breakpoint}container-margin-negative-x {
    margin-left: calc(-1 * var(--container-padding-x));
    margin-right: calc(-1 * var(--container-padding-x));
  }

  @each $container in $containers {
    .#{$breakpoint}container-#{$container} {
      max-width: var(--container-#{$container}-width);
      margin-right: auto;
      margin-left: auto;
      padding-right: var(--container-padding-x);
      padding-left: var(--container-padding-x);
      box-sizing: content-box;
    }

    .#{$breakpoint}container-width-#{$container} {
      max-width: var(--container-#{$container}-width);
    }
  }
}

@include containers();

/*============================================================================
  #Font stacks
==============================================================================*/

@mixin font-stacks($breakpoint: "") {
    .#{$breakpoint}font-stack-inherit {
      font-family: inherit;
    }

  @each $font-stack in $font-stacks {
    .#{$breakpoint}font-stack-#{$font-stack} {
      font-family: var(--typography-#{$font-stack}-font-family);
    }
  }
}

@include font-stacks();

/*============================================================================
  #Font weights
==============================================================================*/

@mixin font-weights($breakpoint: "") {
  @each $value in 100, 200, 300, 400, 500, 600, 700, 800, 900, inherit {
    .#{$breakpoint}font-weight-#{$value} {
      font-weight: $value;
    }
  }
}

@include font-weights();

@each $breakpoint in $breakpoints {
  $keyword: nth($breakpoint, 1);
  $media-query: nth($breakpoint, 2);

  @media only screen and #{$media-query} {
    @include font-weights("#{$keyword}--");
  }
}

/*============================================================================
  #Border radiuses
==============================================================================*/

@mixin border-radiuses($breakpoint: "") {
  @each $border-radius in $border-radiuses {
    .#{$breakpoint}border-radius-#{$border-radius} {
      border-radius: var(--border-radius-#{$border-radius});
    }
    .#{$breakpoint}border-radius-#{$border-radius}\! {
      border-radius: var(--border-radius-#{$border-radius}) !important;
    }
  }

  .#{$breakpoint}border-radius--none {
    border-radius: 0;
  }
  .#{$breakpoint}border-radius--none\! {
    border-radius: 0 !important;
  }
}

@include border-radiuses();

@each $breakpoint in $breakpoints {
  $keyword: nth($breakpoint, 1);
  $media-query: nth($breakpoint, 2);

  @media only screen and #{$media-query} {
    @include border-radiuses("#{$keyword}--");
  }
}

@mixin text-transforms($breakpoint: "") {}

@include text-transforms();

@each $breakpoint in $breakpoints {
  $keyword: nth($breakpoint, 1);
  $media-query: nth($breakpoint, 2);

  @media only screen and #{$media-query} {
    @include text-transforms("#{$keyword}--");
  }
}

@mixin letter-spacings($breakpoint: "") {
  .#{$breakpoint}letter-spacing--inherit {
    letter-spacing: inherit;
  }
}

@include letter-spacings();

@each $breakpoint in $breakpoints {
  $keyword: nth($breakpoint, 1);
  $media-query: nth($breakpoint, 2);

  @media only screen and #{$media-query} {
    @include letter-spacings("#{$keyword}--");
  }
}

/*============================================================================
  #Breakpoint inline styles
==============================================================================*/

/*! purgecss start ignore */
@mixin breakpoint-inline-styles($breakpoint: "") {
  $properties: (
    width,
    max-width,
    padding-bottom,
    font-size,
    margin-left,
    height,
    margin-top,
    padding-top
  );

  @each $property in $properties {
    [style*=" --#{$breakpoint}#{$property}"] {
      #{$property}: var(--#{$breakpoint}#{$property}) !important;
    }
  }
}

@include breakpoint-inline-styles();

@each $breakpoint in $breakpoints {
  $keyword: nth($breakpoint, 1);
  $media-query: nth($breakpoint, 2);

  @media only screen and #{$media-query} {
    @include breakpoint-inline-styles("#{$keyword}--");
  }
}
/*! purgecss end ignore */

/*============================================================================
  #Modular scale helpers
==============================================================================*/

@mixin position-helpers($breakpoint: "") {
  .#{$breakpoint}position-absolute {
    position: absolute;
  }
  .#{$breakpoint}position-relative {
    position: relative;
  }
  .#{$breakpoint}position-fixed {
    position: fixed;
  }
  .#{$breakpoint}position-static {
    position: static;
  }

  .#{$breakpoint}position-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  .#{$breakpoint}position-center-vertical {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
  }
  .#{$breakpoint}position-center-horizontal {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
  }
  .#{$breakpoint}position-full {
    top: 0;
    right: 0;
    left: 0;
    bottom: 0;
  }

  @each $property in top, right, bottom, left {
    .#{$breakpoint}position-#{$property} {
      #{$property}: 0;
    }
    .#{$breakpoint}position-#{$property}--0 {
      #{$property}: var(--spacing--0);
    }
    .#{$breakpoint}position-#{$property}-negative--0 {
      #{$property}: var(--spacing-negative--0);
    }
    .#{$breakpoint}position-#{$property}--full {
      #{$property}: 100%;
    }
    @for $num from 1 through 12 {
      .#{$breakpoint}position-#{$property}--up-#{$num} {
        #{$property}: var(--spacing--up-#{$num});
      }
      .#{$breakpoint}position-#{$property}--down-#{$num} {
        #{$property}: var(--spacing--down-#{$num});
      }
      .#{$breakpoint}position-#{$property}-negative--up-#{$num} {
        #{$property}: var(--spacing-negative--up-#{$num});
      }
      .#{$breakpoint}position-#{$property}-negative--down-#{$num} {
        #{$property}: var(--spacing-negative--down-#{$num});
      }
    }
  }

  @for $n from 1 through 6 {
    .#{$breakpoint}position-#{$n} {
      z-index: $n;
    }
    .#{$breakpoint}position-relative-#{$n} {
      position: relative;
      z-index: $n;
    }
  }

  // Use these classes on parent elements to fix blurriness
  // due to element centered on half of a pixel
  .#{$breakpoint}fix-blurry-text {
    -webkit-perspective: 1000;
  }
  .#{$breakpoint}fix-blurry-elements {
    transform-style: preserve-3d;
  }
}

@mixin padding-helpers($breakpoint: "") {
  .#{$breakpoint}padding--none,
  .#{$breakpoint}last-child-padding--none > :last-child {
    padding: 0;
  }
  .#{$breakpoint}padding--none\! {
    padding: 0 !important;
  }
  .#{$breakpoint}padding--0 {
    padding: var(--spacing--0);
  }
  .#{$breakpoint}padding-top-bottom--0 {
    padding-top: var(--spacing--0);
    padding-bottom: var(--spacing--0);
  }
  .#{$breakpoint}padding-left-right--0 {
    padding-left: var(--spacing--0);
    padding-right: var(--spacing--0);
  }
  @for $num from 1 through 8 {
    .#{$breakpoint}padding--up-#{$num} {
      padding: var(--spacing--up-#{$num});
    }
    .#{$breakpoint}padding--down-#{$num} {
      padding: var(--spacing--down-#{$num});
    }
    .#{$breakpoint}padding-top-bottom--up-#{$num} {
      padding-top: var(--spacing--up-#{$num});
      padding-bottom: var(--spacing--up-#{$num});
    }
    .#{$breakpoint}padding-top-bottom--down-#{$num} {
      padding-top: var(--spacing--down-#{$num});
      padding-bottom: var(--spacing--down-#{$num});
    }
    .#{$breakpoint}padding-left-right--up-#{$num} {
      padding-left: var(--spacing--up-#{$num});
      padding-right: var(--spacing--up-#{$num});
    }
    .#{$breakpoint}padding-left-right--down-#{$num} {
      padding-left: var(--spacing--down-#{$num});
      padding-right: var(--spacing--down-#{$num});
    }
  }
  @each $side in top, right, bottom, left {
    .#{$breakpoint}padding-#{$side}--none {
      padding-#{$side}: 0;
    }
    .#{$breakpoint}padding-#{$side}--0 {
      padding-#{$side}: var(--spacing--0);
    }
    @for $num from 1 through 8 {
      .#{$breakpoint}padding-#{$side}--up-#{$num} {
        padding-#{$side}: var(--spacing--up-#{$num});
      }
      .#{$breakpoint}padding-#{$side}--down-#{$num} {
        padding-#{$side}: var(--spacing--down-#{$num});
      }
    }
  }
}

@mixin margin-helpers($breakpoint: "") {
  .#{$breakpoint}margin--none,
  .#{$breakpoint}last-child-margin--none > :last-child {
    margin: 0;
  }
  .#{$breakpoint}margin--none\!,
  .#{$breakpoint}last-child-margin--none\! > :last-child {
    margin: 0 !important;
  }
  @each $side in top, right, bottom, left {
    .#{$breakpoint}margin-#{$side}--none,
    .#{$breakpoint}last-child-margin-#{$side}--none > :last-child {
      margin-#{$side}: 0;
    }
    .#{$breakpoint}margin-#{$side}--none\!,
    .#{$breakpoint}last-child-margin-#{$side}--none\! > :last-child {
      margin-#{$side}: 0 !important;
    }
    .#{$breakpoint}margin-#{$side}--auto {
      margin-#{$side}: auto;
    }
    .#{$breakpoint}margin-#{$side}--0 {
      margin-#{$side}: var(--spacing--0);
    }
    .#{$breakpoint}margin-#{$side}-negative--0 {
      margin-#{$side}: var(--spacing-negative--0);
    }
    @for $num from 1 through 7 {
      .#{$breakpoint}margin-#{$side}--up-#{$num} {
        margin-#{$side}: var(--spacing--up-#{$num});
      }
      .#{$breakpoint}margin-#{$side}--down-#{$num} {
        margin-#{$side}: var(--spacing--down-#{$num});
      }
      .#{$breakpoint}margin-#{$side}-negative--up-#{$num} {
        margin-#{$side}: var(--spacing-negative--up-#{$num});
      }
      .#{$breakpoint}margin-#{$side}-negative--down-#{$num} {
        margin-#{$side}: var(--spacing-negative--down-#{$num});
      }
    }
  }
}

@mixin font-size-helpers($breakpoint: "") {
  .#{$breakpoint}font-size--none {
    font-size: 0;
    line-height: 1;
  }
  .#{$breakpoint}font-size--inherit {
    font-size: inherit;
  }
  .#{$breakpoint}font-size--0 {
    font-size: var(--font-size--0);
  }
  @for $num from 1 through 6 {
    .#{$breakpoint}font-size--h#{$num} {
      font-size: var(--typography-h#{$num}-font-size);
    }
  }
  @for $num from 1 through 25 {
    .#{$breakpoint}font-size--up-#{$num} {
      font-size: var(--font-size--up-#{$num});
    }
    .#{$breakpoint}font-size--down-#{$num} {
      font-size: var(--font-size--down-#{$num});
    }
  }
}

@mixin line-height-helpers($breakpoint: "") {
  .#{$breakpoint}line-height--none {
    line-height: 1;
  }
  .#{$breakpoint}line-height--0 {
    line-height: var(--font-size--0);
  }
  .#{$breakpoint}line-height--inherit {
    line-height: inherit;
  }
  @for $num from 1 through 30 {
    .#{$breakpoint}line-height--up-#{$num} {
      line-height: var(--font-size--up-#{$num});
    }
    .#{$breakpoint}line-height--down-#{$num} {
      line-height: var(--font-size--down-#{$num});
    }
  }
}

@mixin box-ratio-helpers($breakpoint: "") {

  $ratios: (1,1) (2,1) (3,1) (3,2) (4,3) (16,9) (21,9) (65,22);

  @each $ratio in $ratios {

    $width: nth($ratio,1);
    $height: nth($ratio,2);

    .#{$breakpoint}box-ratio--#{$width}-#{$height} {
      overflow: hidden;
      height: 0;
      width: 100%;
      padding-bottom: percentage($height/$width);
    }
  }

  .#{$breakpoint}box-ratio-inline {
    overflow: hidden;
    height: 0;
    width: 100%;
  }

  .#{$breakpoint}box-ratio-inline\! {
    overflow: hidden !important;
    height: 0 !important;
    width: 100% !important;
  }
}

@mixin color-helpers($breakpoint: "") {
  .#{$breakpoint}text-color-inherit,
  .#{$breakpoint}child-a-text-color-inherit a {
    color: inherit;
  }

  .#{$breakpoint}box-color-inherit {
    background-color: inherit;
  }

  @each $color in $colors {
    .#{$breakpoint}text-color-#{$color},
    .#{$breakpoint}hover-text-color-#{$color}:hover,
    .#{$breakpoint}child-a-text-color-#{$color} a,
    .#{$breakpoint}child-a-hover-text-color-#{$color} a:hover, {
      color: var(--colors-#{$color});
    }
    .#{$breakpoint}box-color-#{$color},
    .#{$breakpoint}hover-box-color-#{$color}:hover {
      background-color: var(--colors-#{$color});
    }
    .#{$breakpoint}border-color-#{$color} {
      border-color: var(--colors-#{$color});
    }
    .#{$breakpoint}placeholder-color-#{$color} {
      @include placeholder {
        color: var(--colors-#{$color});
      }
    }
  }
}

@mixin visibility-helpers($breakpoint: "") {
  .#{$breakpoint}show {
    display: block;
  }
  .#{$breakpoint}show-inline-block {
    display: inline-block;
  }
  .#{$breakpoint}hide {
    display: none;
  }
  .#{$breakpoint}show\! {
    display: block !important;
  }
  .#{$breakpoint}show-inline-block\! {
    display: inline-block !important;
  }
  .#{$breakpoint}hide\! {
    display: none !important;
  }
}

@mixin text-align-helpers($breakpoint: "") {
  .#{$breakpoint}text-left {
    text-align: left;
  }
  .#{$breakpoint}text-right {
    text-align: right;
  }
  .#{$breakpoint}text-center {
    text-align: center;
  }
  .#{$breakpoint}text-left\! {
    text-align: left !important;
  }
  .#{$breakpoint}text-right\! {
    text-align: right !important;
  }
  .#{$breakpoint}text-center\! {
    text-align: center !important;
  }
}

@mixin float-helpers($breakpoint: "") {
  .#{$breakpoint}float-left {
    float: left;
  }
  .#{$breakpoint}float-right {
    float: right;
  }
}

@mixin border-helpers($breakpoint: "") {
  .#{$breakpoint}border--none,
  .#{$breakpoint}last-child-border--none > :last-child {
    border: none;
  }

  .#{$breakpoint}border-current-color,
  .#{$breakpoint}hover-border-current-color:hover {
    border: 1px solid currentColor;
  }

  .#{$breakpoint}border-current-color-double,
  .#{$breakpoint}hover-border-current-color-double:hover {
    border: 2px solid currentColor;
  }

  @each $color in $colors {
    .#{$breakpoint}border-#{$color},
    .#{$breakpoint}hover-border-#{$color}:hover {
      border: 1px solid var(--colors-#{$color});
    }

    .#{$breakpoint}border-#{$color}-double,
    .#{$breakpoint}hover-border-#{$color}-double:hover {
      border: 2px solid var(--colors-#{$color});
    }

    @each $side in top, right, bottom, left {
      .#{$breakpoint}border-#{$side}-#{$color} {
        border-#{$side}: 1px solid var(--colors-#{$color});
      }
      .#{$breakpoint}border-#{$side}-#{$color}-double {
        border-#{$side}: 2px solid var(--colors-#{$color});
      }
      .#{$breakpoint}border-#{$side}--none {
        border-#{$side}: none;
      }
    }

    .#{$breakpoint}border-top-bottom-#{$color} {
      border-top: 1px solid var(--colors-#{$color});
      border-bottom: 1px solid var(--colors-#{$color});
    }
    .#{$breakpoint}border-right-left-#{$color} {
      border-right: 1px solid var(--colors-#{$color});
      border-left: 1px solid var(--colors-#{$color});
    }
  }
}

@include position-helpers();
@include padding-helpers();
@include margin-helpers();
@include font-size-helpers();
@include line-height-helpers();
@include box-ratio-helpers();
@include color-helpers();
@include visibility-helpers();
@include text-align-helpers();
@include float-helpers();
@include border-helpers();

@each $breakpoint in $breakpoints {
  $keyword: nth($breakpoint, 1);
  $media-query: nth($breakpoint, 2);

  @media only screen and #{$media-query} {
    @include grid-helpers("#{$keyword}--");
    @include grid-column-helpers("#{$keyword}--");
    @include flexbox-helpers("#{$keyword}--");
    @include position-helpers("#{$keyword}--");
    @include padding-helpers("#{$keyword}--");
    @include margin-helpers("#{$keyword}--");
    @include font-size-helpers("#{$keyword}--");
    @include line-height-helpers("#{$keyword}--");
    @include box-ratio-helpers("#{$keyword}--");
    @include color-helpers("#{$keyword}--");
    @include visibility-helpers("#{$keyword}--");
    @include text-align-helpers("#{$keyword}--");
    @include float-helpers("#{$keyword}--");
    @include border-helpers("#{$keyword}--");
  }
}

@mixin responsive-images() {
  $animation: fade-in var(--transition-easing) both;

  [data-src]:not(iframe) {
    opacity: 0;

    &.is-loaded {
      animation: $animation;
    }
  }

  img:not([src]) {
    height: 1px;
    width: 1px;
    opacity: 0;
  }
}

@mixin shopify-challenge-page() {
  .shopify-challenge__container {
    padding: var(--spacing--up-4) var(--spacing--up-1);
  }

  .shopify-challenge__button {
    @include input;
    transition: var(--transition-easing);
    padding-left: var(--button-padding-x);
    padding-right: var(--button-padding-x);
    font-weight: var(--button-font-weight);
    text-align: center;
    border-radius: var(--button-border-radius);
    border: var(--button-border);
    color: var(--colors-button-primary-text);
    background-color: var(--colors-button-primary-background);
    border-color: var(--colors-button-primary-border);
    font-size: var(--typography-buttons-font-size);
    line-height: var(--typography-buttons-line-height);
    text-transform: var(--typography-buttons-text-transform);
    letter-spacing: var(--typography-buttons-letter-spacing);
    width: auto;

    &:hover {
      color: var(--colors-button-primary-text-hover);
      background-color: var(--colors-button-primary-background-hover);
      border-color: var(--colors-button-primary-border-hover);
    }
  }
}

@mixin header-logo() {
  .header-logo {
    max-width: 125px;
    margin-left: auto;
    margin-right: auto;
    line-height: 1;

    img {
      display: block;
      width: 100%;
    }

    @include media-query(medium) {
      max-width: 145px;
    }

    @include media-query(large) {
      max-width: 165px;
    }
  }
}

@mixin header-menu() {
  .header-menu {}

  .header-menu__item {}

  .header-menu__megamenu {
    transition: opacity var(--transition-easing);

    .header-menu__item:not(:hover) & {
      opacity: 0;
      pointer-events: none;
    }
  }
}

@mixin header-offcanvas-mobile-menu() {
  .header-off-canvas-mobile-menu {
    transform: translateX(-100%);
    transition: var(--transition-easing);
    opacity: 0;
    pointer-events: none;
    top: calc(var(--utility-bar-height) + var(--header-height));

    html.is-active-offcanvas-header-mobile-menu & {
      transform: none;
      opacity: 1;
      pointer-events: auto;
    }
  }
}

@mixin header-offcanvas-mobile-search() {
  .header-off-canvas-mobile-search {
    transform: translateX(-100%);
    transition: var(--transition-easing);
    opacity: 0;
    pointer-events: none;
    top: calc(var(--utility-bar-height) + var(--header-height));

    html.is-active-offcanvas-header-mobile-search & {
      transform: none;
      opacity: 1;
      pointer-events: auto;
    }
  }
}

@mixin footer-logo() {
  .footer-logo {
    max-width: 75px;

    img {
      display: block;
      width: 100%;
    }
  }
}

@mixin mini-cart() {
  .header-off-canvas-mini-cart {
    transform: translateX(100%);
    transition: var(--transition-easing);
    opacity: 0;
    pointer-events: none;
    top: 0;
    bottom: 0;
    box-shadow: -1px 0 5px rgba(0, 0, 0, .1);

    html.is-active-offcanvas-header-mini-cart & {
      transform: none;
      opacity: 1;
      pointer-events: auto;
    }
  }

  .header-off-canvas-mini-cart-loading {
    opacity: 0;
    pointer-events: none;

    html.is-loading-mini-cart & {
      opacity: 1;
      pointer-events: auto;
    }
  }

  .header-off-canvas-mini-cart-overlay {
    opacity: 0;
    pointer-events: none;
    cursor: default;

    html.is-active-offcanvas-header-mini-cart & {
      opacity: .25;
      pointer-events: auto;
    }
  }
}

@mixin search-form-element() {
  .search-form-element {
    display: none;

    &.is-active {
      display: block;
    }
  }

  .search-form-element-width {
    @include media-query(medium) {
      width: 170px;
    }

    @include media-query(xlarge) {
      width: 280px;
    }
  }
}

@mixin swiper() {
  .swiper-button-prev,
  .swiper-button-next {
    display: block;
    color: inherit;
    opacity: 1;
    width: auto;
    height: auto;
    margin-top: 0;
    transform: translateY(-50%);
    background: none;
    outline: 0;

    &:after {
      display: none;
    }
  }

  .swiper-button-prev {
    left: 0;
  }

  .swiper-button-next {
    right: 0;
  }

  .swiper-button-disabled {}

  .swiper-pagination {
    position: static;
    font-size: 0;
    line-height: 0;
    margin-top: var(--spacing--up-1);
  }

  .swiper-pagination-bullet {
    opacity: 1;
    width: 12px;
    height: 12px;
    margin: 0 var(--spacing--down-5);
    background-color: var(--colors-grey-lightest);
  }

  .swiper-pagination-bullet-active {
    background-color: var(--colors-navy);
  }
}

@mixin homepage-section() {
  .homepage-section {
    .shopify-section:first-child > & {
      padding-top: 0;

      @include media-query(large) {
        padding-top: var(--page-spacing-top);
      }
    }

    .shopify-section:last-child > & {
      padding-bottom: var(--page-spacing-bottom);

      @include media-query(large) {
        padding-bottom: var(--page-spacing-bottom--large);
      }
    }
  }

  .homepage-section--spacing-top {
    padding-top: var(--homepage-section-spacing);
  }

  .homepage-section--spacing-bottom {
    padding-bottom: var(--homepage-section-spacing);
  }
}

@mixin page-spacing() {
  .page-spacing {
    padding-bottom: var(--page-spacing-bottom);

    @include media-query(large) {
      padding-top: var(--page-spacing-top);
      padding-bottom: var(--page-spacing-bottom--large);
    }
  }
}

@mixin product-gallery-thumbs() {
  .product-gallery-thumbs {}

  .product-gallery-thumb {
    position: relative;

    .swiper-slide-thumb-active & {
      &:before {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        left: 0;
        bottom: 0;
        border: 3px solid var(--colors-green);
        pointer-events: none;
        z-index: 1;
      }
    }
  }
}

@mixin product-option-radio() {
  .product-option-radio {
    :checked + & {
      background-color: var(--colors-slate);
      border-color: var(--colors-slate);
      color: var(--colors-light);
    }
  }
}

@mixin dynamic-checkout-buttons() {
  .shopify-payment-button {
    border-top: 1px solid var(--colors-grey-lighter);
    padding-top: var(--spacing--0);
    margin-top: var(--spacing--0);
    position: relative;

    &:before {
      content: 'OR';
      display: block;
      position: absolute;
      top: 0;
      left: 50%;
      transform: translateX(-50%) translateY(-50%);
      background-color: var(--colors-light);
      padding-left: var(--spacing--down-3);
      padding-right: var(--spacing--down-3);
      font-size: var(--font-size--down-4);
      line-height: 1;
      color: var(--colors-grey-dark);
      text-transform: uppercase;
      letter-spacing: var(--typography-uppercase-letter-spacing);
    }
  }

  .shopify-payment-button__button {
    margin: 0 !important;
    border-radius: 0 !important;
  }

  .shopify-payment-button__button--hidden {
    display: none !important;
  }

  .shopify-payment-button__button--unbranded {
    background-color: var(--colors-dark) !important;
    text-transform: uppercase !important;
    letter-spacing: var(--typography-uppercase-letter-spacing) !important;
    font-weight: 700 !important;
    font-size: var(--font-size--down-2) !important;
    line-height: var(--font-size--down-4) !important;
  }

  .shopify-payment-button__more-options {
    display: none !important;
  }
}

@mixin judge-me() {
  .jdgm-preview-badge {
    margin-top: var(--spacing--down-2);

    .jdgm-prev-badge,
    .jdgm-prev-badge__stars {
      display: flex !important;
      align-items: center;
    }

    .jdgm-prev-badge__text {
      font-size: var(--font-size--down-2);
      line-height: var(--font-size--up-4);
      color: var(--colors-grey-dark);
      text-decoration: underline;
      margin-left: var(--spacing--down-2);
    }

    @include media-query(large) {
      margin-top: var(--spacing--down-1);
    }
  }

  .jdgm-star[class][class] {
    font-size: var(--font-size--down-2);
    line-height: 1;
    color: var(--colors-grey-lighter);

    &.jdgm--on {
      color: var(--colors-green);
    }

    &.jdgm--off {
      &:before {
        content: '\e000';
      }
    }
  }

  .jdgm-review-widget {
    .jdgm-rev-widg,
    .jdgm-rev,
    .jdgm-rev__header {
      margin: 0;
      padding: 0;
      border: 0;
    }

    .jdgm-rev-widg__title,
    .jdgm-rev-widg__summary,
    .jdgm-histogram,
    .jdgm-rev-widg__sort-wrapper,
    .jdgm-rev__icon,
    .jdgm-rev__timestamp {
      display: none !important;
    }

    .jdgm-rev-widg__header {
      margin-bottom: var(--spacing--up-2);
    }

    .jdgm-rev {
      background-color: var(--colors-beige);
      padding: var(--spacing--up-1);
      text-align: center;
      display: flex;
      flex-direction: column-reverse;

      + .jdgm-rev {
        margin-top: var(--spacing--0);

        @include media-query(large) {
          margin-top: var(--spacing--up-1);
        }
      }

      @include media-query(large) {
        padding: var(--spacing--up-2);
      }
    }

    .jdgm-rev__author,
    .jdgm-rev__title {
      color: var(--colors-grey-dark);
      font-weight: 500;

      @include media-query(small) {
        font-size: var(--font-size--down-2);
        line-height: var(--font-size--up-4);
      }
    }

    .jdgm-rev__title,
    .jdgm-rev__content,
    .jdgm-rev__rating {
      display: block;
      margin-bottom: var(--spacing--down-3);

      @include media-query(large) {
        margin-bottom: var(--spacing--down-1);
      }
    }

    .jdgm-rev__body {
      @include media-query(large) {
        font-size: var(--font-size--up-2);
        line-height: var(--font-size--up-8);
      }

      * {
        font: inherit;
      }
    }

    .jdgm-widget-actions-wrapper {
      float: none;
      text-align: center;
    }

    .jdgm-write-rev-link,
    .btn {
      @include input;
      transition: var(--transition-easing);
      padding-left: var(--button-padding-x);
      padding-right: var(--button-padding-x);
      font-weight: var(--button-font-weight);
      text-align: center;
      border-radius: var(--button-border-radius);
      border: var(--button-border);
      color: var(--colors-button-primary-text);
      background-color: var(--colors-button-primary-background);
      border-color: var(--colors-button-primary-border);
      font-size: var(--typography-buttons-font-size);
      line-height: var(--typography-buttons-line-height);
      text-transform: var(--typography-buttons-text-transform);
      letter-spacing: var(--typography-buttons-letter-spacing);

      &:hover {
        color: var(--colors-button-primary-text-hover);
        background-color: var(--colors-button-primary-background-hover);
        border-color: var(--colors-button-primary-border-hover);
      }
    }

    [type="text"][type][type],
    [type="email"][type][type],
    textarea[id][id] {
      @include input;
      @include input-border();
      border-radius: 0;
      min-height: 0;
    }
  }
}

/*! purgecss start ignore */
@include responsive-images();
@include shopify-challenge-page();
@include header-logo();
@include header-menu();
@include header-offcanvas-mobile-menu();
@include header-offcanvas-mobile-search();
@include footer-logo();
@include mini-cart();
@include search-form-element();
@include swiper();
@include homepage-section();
@include page-spacing();
@include product-gallery-thumbs();
@include product-option-radio();
@include dynamic-checkout-buttons();
@include judge-me();
/*! purgecss end ignore */
